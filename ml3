import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn import metrics
import seaborn as sns
from skimage.transform import resize

# Load the digits dataset
digits = datasets.load_digits()

print(digits)

# Split the data into features (X) and labels (y)
X = digits.data
y = digits.target

# Displaying the Image (resize for larger display)
image = X[8, :].reshape(8, 8)  # Access and reshape the 9th image
image_resized = resize(image, (25, 25), anti_aliasing=True)  # Resize to 28x28

plt.imshow(image_resized, cmap='gray')
plt.show()

digits.data.shape

# Create a count plot for the labels
sns.countplot(x=y)
plt.xlabel('Digit Label')
plt.ylabel('Count')
plt.title('Count of Each Digit in the Digits Dataset')
plt.show()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create an SVM classifier (linear kernel)
clf = svm.SVC(kernel='linear')

# Fit the classifier on the training data
clf.fit(X_train, y_train)

# Predict on the test data
y_pred = clf.predict(X_test)

# Calculate accuracy
accuracy = metrics.accuracy_score(y_test, y_pred)
print("Accuracy : ", accuracy)

# Visualize some of the test images and their predicted labels
plt.figure(figsize=(15, 8))
for i in range(10):
    plt.subplot(5, 5, i + 1)
    plt.imshow(X_test[i].reshape(8, 8), cmap=plt.cm.gray_r)
    plt.title(f"Predicted : {y_pred[i]}, Actual : {y_test[i]}")
    plt.axis('off')

seq = int(input("Enter the Index : "))
plt.imshow(X_test[seq].reshape(8, 8), cmap=plt.cm.gray_r)
plt.title(f"Predicted : {y_pred[seq]}, Actual : {y_test[seq]}")
plt.axis('on')

# Displaying the Image (resize for larger display)
image = X[10, :].reshape(8, 8)  # Access and reshape the 9th image
image_resized = resize(image, (25, 25), anti_aliasing=True)  # Resize to 28x28

plt.imshow(image_resized, cmap='gray')
plt.show()
